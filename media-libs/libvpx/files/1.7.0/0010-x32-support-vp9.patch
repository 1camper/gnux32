From add23c0b0cbb7d25ec858860b1e9c65216b12f27 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Matthias=20R=C3=A4ncker?= <theonetruecamper@gmx.de>
Date: Sun, 9 Sep 2018 22:52:35 +0200
Subject: [PATCH 10/12] x32 support: vp9
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Matthias RÃ¤ncker <theonetruecamper@gmx.de>
Change-Id: I0a9b110a392b72cc3ec6b5131ba73b1d38eb4455
---
 vp9/encoder/x86/vp9_error_sse2.asm            |  4 ++--
 vp9/encoder/x86/vp9_quantize_ssse3_x86_64.asm | 25 ++++++++++++++++---------
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/vp9/encoder/x86/vp9_error_sse2.asm b/vp9/encoder/x86/vp9_error_sse2.asm
index 11d473b2d..2fc9a05d5 100644
--- a/vp9/encoder/x86/vp9_error_sse2.asm
+++ b/vp9/encoder/x86/vp9_error_sse2.asm
@@ -30,7 +30,7 @@ cglobal block_error, 3, 3, 8, uqc, dqc, size, ssz
   LOAD_TRAN_LOW 1, dqcq, 8
   INCREMENT_ELEMENTS_TRAN_LOW uqcq, 16
   INCREMENT_ELEMENTS_TRAN_LOW dqcq, 16
-  sub    sizeq, 16
+  sub    sizep, 16
   psubw     m0, m2
   psubw     m1, m3
   ; individual errors are max. 15bit+sign, so squares are 30bit, and
@@ -86,7 +86,7 @@ cglobal block_error_fp, 3, 3, 6, uqc, dqc, size
   LOAD_TRAN_LOW 1, dqcq, 8
   INCREMENT_ELEMENTS_TRAN_LOW uqcq, 16
   INCREMENT_ELEMENTS_TRAN_LOW dqcq, 16
-  sub    sizeq, 16
+  sub    sizep, 16
   psubw     m0, m2
   psubw     m1, m3
   ; individual errors are max. 15bit+sign, so squares are 30bit, and
diff --git a/vp9/encoder/x86/vp9_quantize_ssse3_x86_64.asm b/vp9/encoder/x86/vp9_quantize_ssse3_x86_64.asm
index 5703aa3bb..ab93cd86f 100644
--- a/vp9/encoder/x86/vp9_quantize_ssse3_x86_64.asm
+++ b/vp9/encoder/x86/vp9_quantize_ssse3_x86_64.asm
@@ -18,17 +18,24 @@ pw_1: times 8 dw 1
 
 SECTION .text
 
+;void vp9_quantize_*(const tran_low_t *coeff_ptr, intptr_t n_coeffs,
+;                    int skip_block, const int16_t *round_ptr,
+;                    const int16_t *quant_ptr, tran_low_t *qcoeff_ptr,
+;                    tran_low_t *dqcoeff_ptr, const int16_t *dequant_ptr,
+;                    uint16_t eob_ptr, const int16_t *scan,
+;                    const int16_t *iscan)
+
 %macro QUANTIZE_FP 2
 cglobal quantize_%1, 0, %2, 15, coeff, ncoeff, skip, round, quant, \
                                 qcoeff, dqcoeff, dequant, \
                                 eob, scan, iscan
 
   ; actual quantize loop - setup pointers, rounders, etc.
-  movifnidn                   coeffq, coeffmp
-  movifnidn                  ncoeffq, ncoeffmp
-  mov                             r2, dequantmp
-  movifnidn                   roundq, roundmp
-  movifnidn                   quantq, quantmp
+  movifnidn                   coeffp, coeffmx
+  movsxdifnidn               ncoeffq, ncoeffmx
+  mov                            r2p, dequantmx
+  movifnidn                   roundp, roundmx
+  movifnidn                   quantp, quantmx
   mova                            m1, [roundq]             ; m1 = round
   mova                            m2, [quantq]             ; m2 = quant
 %ifidn %1, fp_32x32
@@ -38,9 +45,9 @@ cglobal quantize_%1, 0, %2, 15, coeff, ncoeff, skip, round, quant, \
   psrlw                           m1, 1                    ; m1 = (m1 + 1) / 2
 %endif
   mova                            m3, [r2q]                ; m3 = dequant
-  mov                             r3, qcoeffmp
-  mov                             r4, dqcoeffmp
-  mov                             r5, iscanmp
+  mov                             r3p, qcoeffmx
+  mov                             r4p, dqcoeffmx
+  mov                             r5p, iscanmx
 %ifidn %1, fp_32x32
   psllw                           m2, 1
 %endif
@@ -161,7 +168,7 @@ cglobal quantize_%1, 0, %2, 15, coeff, ncoeff, skip, round, quant, \
 
 .accumulate_eob:
   ; horizontally accumulate/max eobs and write into [eob] memory pointer
-  mov                             r2, eobmp
+  mov                            r2p, eobmx
   pshufd                          m7, m8, 0xe
   pmaxsw                          m8, m7
   pshuflw                         m7, m8, 0xe
-- 
2.16.4

