From d0e95acc4d2951606db9a8abf6eb6bbb937f4eaf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Matthias=20R=C3=A4ncker?= <theonetruecamper@gmx.de>
Date: Sun, 9 Sep 2018 22:52:26 +0200
Subject: [PATCH 10/18] x32 support: vp8
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Matthias RÃ¤ncker <theonetruecamper@gmx.de>
Change-Id: Idfbb263447233df0a480318457c4dfc63ed9d05b
---
 vp8/common/x86/subpixel_mmx.asm                | 4 ++--
 vp8/common/x86/subpixel_sse2.asm               | 8 ++++----
 vp8/encoder/x86/temporal_filter_apply_sse2.asm | 4 ++--
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/vp8/common/x86/subpixel_mmx.asm b/vp8/common/x86/subpixel_mmx.asm
index 47dd45229..a40354996 100644
--- a/vp8/common/x86/subpixel_mmx.asm
+++ b/vp8/common/x86/subpixel_mmx.asm
@@ -38,7 +38,7 @@ sym(vp8_filter_block1d_h6_mmx):
     push        rdi
     ; end prolog
 
-        mov         rdx,    arg(6) ;vp8_filter
+        mov         rdxp,   arg(6) ;vp8_filter
 
         movq        mm1,    [rdx + 16]             ; do both the negative taps first!!!
         movq        mm2,    [rdx + 32]         ;
@@ -137,7 +137,7 @@ sym(vp8_filter_block1dc_v6_mmx):
 
         movq      mm5, [GLOBAL(rd)]
         push        rbx
-        mov         rbx, arg(7) ;vp8_filter
+        mov         rbxp, arg(7) ;vp8_filter
         movq      mm1, [rbx + 16]             ; do both the negative taps first!!!
         movq      mm2, [rbx + 32]         ;
         movq      mm6, [rbx + 48]        ;
diff --git a/vp8/common/x86/subpixel_sse2.asm b/vp8/common/x86/subpixel_sse2.asm
index 69f8d103c..5b8dd5ec6 100644
--- a/vp8/common/x86/subpixel_sse2.asm
+++ b/vp8/common/x86/subpixel_sse2.asm
@@ -44,7 +44,7 @@ sym(vp8_filter_block1d8_h6_sse2):
     push        rdi
     ; end prolog
 
-        mov         rdx,        arg(6) ;vp8_filter
+        mov         rdxp,       arg(6) ;vp8_filter
         mov         rsi,        arg(0) ;src_ptr
 
         mov         rdi,        arg(1) ;output_ptr
@@ -164,7 +164,7 @@ sym(vp8_filter_block1d16_h6_sse2):
     push        rdi
     ; end prolog
 
-        mov         rdx,        arg(6) ;vp8_filter
+        mov         rdxp,       arg(6) ;vp8_filter
         mov         rsi,        arg(0) ;src_ptr
 
         mov         rdi,        arg(1) ;output_ptr
@@ -340,7 +340,7 @@ sym(vp8_filter_block1d8_v6_sse2):
     push        rdi
     ; end prolog
 
-        mov         rax,        arg(7) ;vp8_filter
+        mov         raxp,       arg(7) ;vp8_filter
         movsxd      rdx,        dword ptr arg(3) ;pixels_per_line
 
         mov         rdi,        arg(1) ;output_ptr
@@ -435,7 +435,7 @@ sym(vp8_filter_block1d16_v6_sse2):
     push        rdi
     ; end prolog
 
-        mov         rax,        arg(7) ;vp8_filter
+        mov         raxp,       arg(7) ;vp8_filter
         movsxd      rdx,        dword ptr arg(3) ;pixels_per_line
 
         mov         rdi,        arg(1) ;output_ptr
diff --git a/vp8/encoder/x86/temporal_filter_apply_sse2.asm b/vp8/encoder/x86/temporal_filter_apply_sse2.asm
index bd92b398a..704ef0e76 100644
--- a/vp8/encoder/x86/temporal_filter_apply_sse2.asm
+++ b/vp8/encoder/x86/temporal_filter_apply_sse2.asm
@@ -57,8 +57,8 @@ sym(vp8_temporal_filter_apply_sse2):
 
         mov         rsi,            arg(0) ; src/frame1
         mov         rdx,            arg(2) ; predictor frame
-        mov         rdi,            arg(6) ; accumulator
-        mov         rax,            arg(7) ; count
+        mov         rdip,           arg(6) ; accumulator
+        mov         raxp,           arg(7) ; count
 
         ; dup the filter weight and store for later
         movd        xmm0,           arg(5) ; filter_weight
-- 
2.16.4

